{
  "title": "Brightness Mirror",
  "description": "This video looks at how to create an abstract mirror in a p5.js canvas based on the brightness values of the pixels from live video.",
  "videoId": "rNqaw8LT2ZU",
  "nebulaSlug": "",
  "date": "2016-03-31",
  "languages": ["JavaScript"],
  "topics": ["p5.js", "pixel array", "pixels"],
  "canContribute": true,
  "relatedChallenges": ["47-pixel-sorting-in-processing", "102-2d-water-ripple"],
  "timestamps": [
    {
      "time": "0:00",
      "title": "Introduction"
    },
    {
      "time": "1:23",
      "title": "Loading the video's pixels"
    },
    {
      "time": "3:35",
      "title": "Brightness value of the pixels"
    },
    {
      "time": "4:25",
      "title": "Discuss performance issues"
    },
    {
      "time": "6:04",
      "title": "Add a vScale variable"
    },
    {
      "time": "7:16",
      "title": "Draw a rectangle for every pixel"
    },
    {
      "time": "10:00",
      "title": "Map pixel size to the video brightness"
    },
    {
      "time": "12:26",
      "title": "Mirror the video image"
    },
    {
      "time": "13:39",
      "title": "Outro"
    }
  ],
  "codeExamples": [
    {
      "title": "Brightness Mirror",
      "description": "Abstract video mirror with squares",
      "image": "image1.png",
      "urls": {
        "p5": "https://editor.p5js.org/codingtrain/sketches/nFOs57gVh"
      }
    }
  ],
  "groupLinks": [
    {
      "title": "References",
      "links": [
        {
          "title": "loadPixels",
          "url": "https://p5js.org/reference/#/p5/loadPixels",
          "description": "p5 reference entry on the loadPixels() function"
        },
        {
          "title": "updatePixels",
          "url": "https://p5js.org/reference/#/p5/updatePixels",
          "description": "p5 reference entry on the updatePixels() function"
        }
      ]
    },
    {
      "title": "Videos",
      "links": [
        {
          "icon": "ðŸŽ¥",
          "title": "map()",
          "url": "/tracks/code-programming-with-p5-js/code/2-variables/5-map",
          "description": "This video covers the map() function in p5.js -- how to take a value from a given range and map it to a new range."
        }
      ]
    }
  ],
  "credits": [
    {
      "title": "Editing",
      "name": "Mathieu Blanchette"
    }
  ]
}
